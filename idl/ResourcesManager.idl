//  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
// 
//  This library is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU Lesser General Public 
//  License as published by the Free Software Foundation; either 
//  version 2.1 of the License. 
// 
//  This library is distributed in the hope that it will be useful, 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
//  Lesser General Public License for more details. 
// 
//  You should have received a copy of the GNU Lesser General Public 
//  License along with this library; if not, write to the Free Software 
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
// 
//  See http://www.opencascade.org/SALOME/ or email : webmaster.salome@opencascade.org 
//
//
//
//  File   : ResourcesManager.idl
//  Author : Jean Rahuel
//  $Header: 

#ifndef _RESOURCESMANAGER_IDL_
#define _RESOURCESMANAGER_IDL_

#include "SALOME_Component.idl"
#include "ContainersManager.idl"

module Resources {

  struct ComputerParameters {
    string             FullName ;
    string             Alias ;
    long               SshAccess ;
    long               Interactive ;
    long               Batch ;
    string             UserName ;
    Containers::System Os ;
    long               Memory ;
    long               Swap ;
    long               CpuClock ;
    long               NbProc ;
    long               NbNode ;
  } ;

  typedef sequence<string> ListOfStrings ;

  struct ComputerEnvironment {
    ListOfStrings Module_Root_Dir_Names ;
    ListOfStrings Module_Root_Dir_Values ;
  } ;

  interface Computer ;

  typedef sequence<Computer> ListOfComputers ;

  interface Computer {

    boolean ping() ;

    string FullName() ;

    string Alias() ;

    boolean IsAlive() ;

    boolean SshAccess() ;

    boolean RshAccess() ;

    boolean Interactive() ;

    boolean Batch() ;

    string UserName() ;

    Containers::System Os() ;

    long Memory() ;

    long Swap() ;

    long CpuClock() ;

    long NbProc() ;

    long NbNode() ;

    ComputerParameters Parameters() ;

    ComputerEnvironment Environment() ;

  } ;

  interface Manager {

    boolean ping() ;

    boolean SshAccess( in string aHostName ) ;

    string UserName( in string aHostName ) ;

    ListOfComputers AllComputers() ;

    ListOfComputers GetComputers( in Containers::MachineParameters aMachineParameters ) ;

    Computer SelectComputer( in Containers::MachineParameters aMachineParameters ) ;

    Computer GetComputer( in ListOfComputers aListOfComputers ) ;

    Computer SearchComputer( in string aComputerName ) ;

  } ;

} ;

#endif
