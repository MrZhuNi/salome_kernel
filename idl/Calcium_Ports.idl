//  Copyright (C) 2007	OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
// 
//  This library is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU Lesser General Public 
//  License as published by the Free Software Foundation; either 
//  version 2.1 of the License. 
// 
//  This library is distributed in the hope that it will be useful, 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
//  Lesser General Public License for more details. 
// 
//  You should have received a copy of the GNU Lesser General Public 
//  License along with this library; if not, write to the Free Software 
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
// 
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//
//  File   : Calcium_Ports.idl
//  Author : Eric FAYOLLE, EDF
//  $Header:

#ifndef _CALCIUM_PORTS_IDL_
#define _CALCIUM_PORTS_IDL_

#include "SALOME_Ports.idl"

module Ports {

  module Calcium_Ports {

    typedef sequence<long>    seq_long;
    typedef sequence<float>   seq_float;
    typedef sequence<double>  seq_double;
    typedef sequence<string>  seq_string;
    typedef sequence<boolean> seq_boolean;
    typedef seq_float         seq_complex;

    interface Calcium_Integer_Port : Ports::Data_Port {
      void put (in seq_long data, in double time, in long tag);
    };

    interface Calcium_Real_Port : Ports::Data_Port {
      void put (in seq_float data, in double time, in long tag);
    };

    interface Calcium_Double_Port : Ports::Data_Port {
      void put (in seq_double data, in double time, in long tag);
    };

    interface Calcium_String_Port : Ports::Data_Port {
      void put (in seq_string data, in double time, in long tag);
    };

    interface Calcium_Logical_Port : Ports::Data_Port {
      void put (in seq_boolean data, in double time, in long tag);
    };

    interface Calcium_Complex_Port : Ports::Data_Port {
      void put (in seq_complex data, in double time, in long tag);
    };

  };
};

#endif
