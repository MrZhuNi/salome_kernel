# Copyright (C) 2007-2012  CEA/DEN, EDF R&D, OPEN CASCADE
#
# Copyright (C) 2003-2007  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
# CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

# ------

MESSAGE(STATUS "Check for SimanIO ...")

# ------

IF(SIMANIO_IS_MANDATORY STREQUAL 0)
  SET(SIMANIO_IS_MANDATORY 0)
  SET(SIMANIO_IS_OPTIONAL 1)
ENDIF(SIMANIO_IS_MANDATORY STREQUAL 0)
IF(SIMANIO_IS_OPTIONAL STREQUAL 0)
  SET(SIMANIO_IS_MANDATORY 1)
  SET(SIMANIO_IS_OPTIONAL 0)
ENDIF(SIMANIO_IS_OPTIONAL STREQUAL 0)
IF(NOT SIMANIO_IS_MANDATORY AND NOT SIMANIO_IS_OPTIONAL)
  SET(SIMANIO_IS_MANDATORY 0)
  SET(SIMANIO_IS_OPTIONAL 1)
ENDIF(NOT SIMANIO_IS_MANDATORY AND NOT SIMANIO_IS_OPTIONAL)

# ------

SET(SIMANIO_STATUS 1)
IF(WITHOUT_SIMANIO OR WITH_SIMANIO STREQUAL 0)
  SET(SIMANIO_STATUS 0)
  MESSAGE(STATUS "SimanIO disabled from command line.")
ENDIF(WITHOUT_SIMANIO OR WITH_SIMANIO STREQUAL 0)

# ------

IF(SIMANIO_STATUS)
  IF(WITH_SIMANIO)
    SET(SIMANIO_ROOT_USER ${WITH_SIMANIO})
  ELSE(WITH_SIMANIO)
    SET(SIMANIO_ROOT_USER $ENV{SIMANIO_ROOT_DIR})
  ENDIF(WITH_SIMANIO)
ENDIF(SIMANIO_STATUS)

# -----

IF(SIMANIO_STATUS)
  IF(SIMANIO_ROOT_USER)
    SET(SIMANIO_FIND_PATHS_OPTION NO_DEFAULT_PATH)
  ELSE(SIMANIO_ROOT_USER)
    SET(SIMANIO_FIND_PATHS_OPTION)
  ENDIF(SIMANIO_ROOT_USER)
ENDIF(SIMANIO_STATUS)

# -----

IF(SIMANIO_STATUS)
  IF(SIMANIO_ROOT_USER)
    SET(SIMANIO_INCLUDE_PATHS ${SIMANIO_ROOT_USER} ${SIMANIO_ROOT_USER}/include)
  ELSE(SIMANIO_ROOT_USER)
    SET(SIMANIO_INCLUDE_PATHS)
  ENDIF(SIMANIO_ROOT_USER)
  SET(SIMANIO_INCLUDE_TO_FIND SimanIO_Link.hxx)
  FIND_PATH(SIMANIO_INCLUDE_DIR ${SIMANIO_INCLUDE_TO_FIND} PATHS ${SIMANIO_INCLUDE_PATHS} ${SIMANIO_FIND_PATHS_OPTION})
  IF(SIMANIO_INCLUDE_DIR)
    IF(SIMANIO_ROOT_USER)
      SET(SIMANIO_CPPFLAGS -I${SIMANIO_INCLUDE_DIR})
    ENDIF(SIMANIO_ROOT_USER)
    MESSAGE(STATUS "${SIMANIO_INCLUDE_TO_FIND} found in ${SIMANIO_INCLUDE_DIR}")
  ELSE(SIMANIO_INCLUDE_DIR)
    SET(SIMANIO_STATUS 0)
    IF(SIMANIO_ROOT_USER)
      MESSAGE(STATUS "${SIMANIO_INCLUDE_TO_FIND} not found in ${SIMANIO_INCLUDE_PATHS}, check your SimanIO installation.")
    ELSE(SIMANIO_ROOT_USER)
      MESSAGE(STATUS "${SIMANIO_INCLUDE_TO_FIND} not found on system, try to use WITH_SIMANIO option or SIMANIO_ROOT environment variable.")
    ENDIF(SIMANIO_ROOT_USER)
  ENDIF(SIMANIO_INCLUDE_DIR)
ENDIF(SIMANIO_STATUS)

# ----

IF(SIMANIO_STATUS)
  IF(SIMANIO_ROOT_USER)
    SET(SIMANIO_LIB_PATHS ${SIMANIO_ROOT_USER}/lib)
  ELSE(SIMANIO_ROOT_USER)
    SET(SIMANIO_LIB_PATHS)
  ENDIF(SIMANIO_ROOT_USER)
ENDIF(SIMANIO_STATUS)

IF(SIMANIO_STATUS)
  IF(WINDOWS)
    FIND_LIBRARY(SIMANIO_LIB SimanIO PATHS ${SIMANIO_LIB_PATHS} ${SIMANIO_FIND_PATHS_OPTION})
  ELSE(WINDOWS)
    FIND_LIBRARY(SIMANIO_LIB SimanIO PATHS ${SIMANIO_LIB_PATHS} ${SIMANIO_FIND_PATHS_OPTION})
  ENDIF(WINDOWS)
  SET(SIMANIO_LIBS)
  IF(SIMANIO_LIB)
    SET(SIMANIO_LIBS ${SIMANIO_LIBS} ${SIMANIO_LIB})
    MESSAGE(STATUS "SimanIO lib found: ${SIMANIO_LIB}")
  ELSE(SIMANIO_LIB)
    SET(SIMANIO_STATUS 0)
    IF(SIMANIO_ROOT_USER)
      MESSAGE(STATUS "SimanIO lib not found in ${SIMANIO_LIB_PATHS}, check your SimanIO installation.")
    ELSE(SIMANIO_ROOT_USER)
      MESSAGE(STATUS "SimanIO lib not found on system, try to use WITH_SIMANIO option or SIMANIO_ROOT environment variable.")
    ENDIF(SIMANIO_ROOT_USER)
  ENDIF(SIMANIO_LIB)
ENDIF(SIMANIO_STATUS)

# ----

IF(SIMANIO_STATUS)
  SET(WITH_SIMANIO 1)
ELSE(SIMANIO_STATUS)
  IF(SIMANIO_IS_MANDATORY)
    MESSAGE(FATAL_ERROR "SimanIO not found ... mandatory ... abort")
  ELSE(SIMANIO_IS_MANDATORY)
    MESSAGE(STATUS "SimanIO not found ... optional ... disabled")
  ENDIF(SIMANIO_IS_MANDATORY)
ENDIF(SIMANIO_STATUS)

# ------
